// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReactDOMRe = require("reason-react/lib/js/src/ReactDOMRe.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var CSS$ReactTemplate = require("./CSS.bs.js");
var Design_system$ReactTemplate = require("./design_system.bs.js");

var component = ReasonReact.statelessComponent("Input");

function make(textStyle, value, onChange, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement("input", {
                          defaultValue: value,
                          style: ReactDOMRe.Style[/* combine */0](Curry._1(CSS$ReactTemplate.Atom[/* Text */2][/* to_css */0], Curry._1(Design_system$ReactTemplate.Atom[/* Text */2][/* make */0], textStyle)), {
                                backgroundColor: "transparent",
                                borderWidth: "0",
                                outline: "none",
                                padding: "0"
                              }),
                          onChange: onChange
                        });
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var Style = 0;

exports.Style = Style;
exports.component = component;
exports.make = make;
/* component Not a pure module */

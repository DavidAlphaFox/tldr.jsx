// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Design_system$ReactTemplate = require("./design_system.bs.js");

function spacer_size(param) {
  if (param !== 77) {
    if (param >= 19700) {
      if (param >= 19707) {
        return "5px";
      } else {
        return "25px";
      }
    } else if (param >= 83) {
      return "10px";
    } else {
      return "20px";
    }
  } else {
    return "15px";
  }
}

function feedback_state(param) {
  return true;
}

function font_weight(param) {
  if (param >= 737455525) {
    return "600";
  } else {
    return "400";
  }
}

function font_size(param) {
  if (param >= 748543309) {
    if (param >= 858743897) {
      return /* tuple */[
              /* `Font_size */[
                971362385,
                "40px"
              ],
              /* `Line_height */[
                -973586446,
                "50px"
              ]
            ];
    } else {
      return /* tuple */[
              /* `Font_size */[
                971362385,
                "20px"
              ],
              /* `Line_height */[
                -973586446,
                "30px"
              ]
            ];
    }
  } else if (param >= 737453762) {
    return /* tuple */[
            /* `Font_size */[
              971362385,
              "24px"
            ],
            /* `Line_height */[
              -973586446,
              "30px"
            ]
          ];
  } else {
    return /* tuple */[
            /* `Font_size */[
              971362385,
              "15px"
            ],
            /* `Line_height */[
              -973586446,
              "20px"
            ]
          ];
  }
}

function font_family(param) {
  if (param >= 925282419) {
    return "Helvetica, Arial, sans-serif";
  } else {
    return "Roboto Mono, Menlo, monospace";
  }
}

function color(param) {
  if (param >= 106380200) {
    if (param >= 793050115) {
      return "#616161";
    } else {
      return "#EF0000";
    }
  } else if (param >= -588596599) {
    return "#FFFFFF";
  } else {
    return "#000000";
  }
}

var Particle = /* module */[
  /* spacer_size */spacer_size,
  /* feedback_state */feedback_state,
  /* font_weight */font_weight,
  /* font_size */font_size,
  /* font_family */font_family,
  /* color */color
];

function to_css(size) {
  var size$prime = spacer_size(size);
  return {
          height: size$prime,
          width: size$prime
        };
}

var Spacer = /* module */[/* to_css */to_css];

function to_css$1(param) {
  return {
          borderColor: color(param[/* color */0])
        };
}

var Border = /* module */[/* to_css */to_css$1];

function to_css$2(ds_style) {
  var match = Curry._1(Design_system$ReactTemplate.Atom[/* Text */2][/* view */1], ds_style);
  var match$1 = font_size(match[/* size */0]);
  return {
          color: color(match[/* color */3]),
          fontFamily: font_family(match[/* family */2]),
          fontSize: match$1[0][1],
          fontWeight: font_weight(match[/* weight */1]),
          lineHeight: match$1[1][1]
        };
}

var Text = /* module */[/* to_css */to_css$2];

var Atom = /* module */[
  /* Spacer */Spacer,
  /* Border */Border,
  /* Text */Text
];

var Style = 0;

exports.Style = Style;
exports.Particle = Particle;
exports.Atom = Atom;
/* No side effect */
